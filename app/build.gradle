plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'xml-class-guard'
}
//以下均为非必须
xmlClassGuard {
    /*
     * 是否查找约束布局的constraint_referenced_ids属性的值，并添加到AabResGuard的白名单中，
     * 是的话，要求你在XmlClassGuard前依赖AabResGuard插件，默认false
     */
    findAabConstraintReferencedIds = false

    /*
     * 是否查找约束布局的constraint_referenced_ids属性的值，并添加到AndResGuard的白名单中，
     * 是的话，要求你在XmlClassGuard前依赖AndResGuard插件，默认false
     */
    findAndConstraintReferencedIds = false
    //用于增量混淆的 mapping 文件
    mappingFile = file("xml-class-mapping.txt")
    //更改manifest文件的package属性，即包名
//    packageChange = ["com.ljx.example": "ab.cd"]
    //移动目录
//    moveDir = ["com.ljx.example": "ef.gh"]
}
android {
    compileSdk 34

    defaultConfig {
        applicationId "com.example.myapplication"
        minSdk 21
        targetSdk 33
        versionCode 2
        versionName "1.1"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_foundation_version
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    namespace 'com.example.myapplication'

}

dependencies {
//    implementation 'androidx.core:core-ktx:1.9.0'
    implementation "androidx.compose.ui:ui:$rootProject.compose_version"
    implementation "androidx.compose.foundation:foundation:$rootProject.compose_version"
    implementation "androidx.compose.material:material:$rootProject.compose_version"
    implementation "androidx.compose.material3:material3:1.1.2"
    implementation "androidx.compose.ui:ui-tooling-preview:$rootProject.compose_version"
//    implementation "androidx.compose.ui:ui-util:$compose_version"
    implementation "androidx.constraintlayout:constraintlayout-compose:1.0.1"
    //    //BottomNavigation rememberPagerState
    implementation "com.google.accompanist:accompanist-pager:0.30.1"
    implementation "androidx.navigation:navigation-compose:2.7.5"
//    implementation "androidx.constraintlayout:constraintlayout:2.1.4"
    implementation "com.github.bumptech.glide:compose:1.0.0-alpha.1"
    implementation 'com.google.android.material:material:1.10.0'

//    implementation "com.github.skydoves:landscapist-glide:2.1.0"
    //这个也得加才能预览
    debugImplementation "androidx.compose.ui:ui-tooling:$rootProject.compose_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.6.2"
    implementation 'androidx.activity:activity-compose:1.8.1'
    api "androidx.appcompat:appcompat:1.6.1"
    // ViewModel utilities for Compose
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:2.6.2"
    implementation "androidx.lifecycle:lifecycle-runtime-compose:2.6.2"
    // Integration with observables
    implementation "androidx.compose.runtime:runtime-livedata:$rootProject.compose_version"
    implementation "com.google.accompanist:accompanist-insets:0.16.0"
    implementation "com.google.accompanist:accompanist-systemuicontroller:0.16.0"
//    implementation "androidx.paging:paging-compose:$compose_version"
//    implementation "androidx.paging:paging-common-ktx:3.1.1"

    implementation "androidx.core:core-splashscreen:1.0.1"

//    openApi
//    implementation "com.aallam.openai:openai-client:3.0.0-beta01"
//    // import Kotlin API client BOM
//    implementation platform('com.aallam.openai:openai-client-bom:3.0.0-beta01')
//
//    // define dependencies without versions
//    implementation 'com.aallam.openai:openai-client'
//    implementation 'io.ktor:ktor-client-okhttp'

//    api project(path: ':icon_library')
    api project(path: ':mylibrary')
    //计算库
    implementation 'net.objecthunter:exp4j:0.4.8'
    implementation 'com.google.code.gson:gson:2.10.1'
    //bottomsheet
    implementation("com.github.skydoves:flexible-bottomsheet-material:0.1.1")
}
